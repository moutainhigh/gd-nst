<?xml version="1.0" encoding="UTF-8" ?>
<sqlMap namespace="MemberInfo">
	<sql id="queryListByPage"> 
 	<![CDATA[
 	select * from ( 
		 select  
		   mi.id 
		  ,mi.account			
		  ,mi.mobile 		
		  ,mi.password 	
		  ,mi.appType     
		  ,mi.serviceType 
		  ,ifnull(userName,"") userName
		  ,mi.iconUrl 	
		  ,mi.latestLoginTime
		  ,mi.regetype 	
		  ,mi.status 		
		  ,mi.remark 		
		  ,mi.createUserId
		  ,mi.createTime  
		  ,mi.updateUserId
		  ,mi.updateTime  
		  ,mi.cerPersonalStatus 
          ,mi.cerCompanyStatus 
          ,mi.appoint
          ,ro.detail
          ,ro.provinceId 	
		  ,ro.cityId 
		  ,ro.areaId 
		  ,CASE 
   			WHEN rla.memberType=2 then (select userName from member_info where id=rla.memberIdLogistic )
  			WHEN  rla.memberType=3 then (SELECT companyName FROM member_cer WHERE rla.memberIdLogistic = memberId AND userType = 2  LIMIT 1 )
			END as memberIdLogisticName
		from member_info mi
		 LEFT JOIN   rule_onoff ro  on   mi.id=ro.memberId
         LEFT JOIN  rule_logistic_assign rla on (rla.memberIdShipper=mi.id and  rla.isDeleted = 0)
		where 1=1
		<#if userName?exists && userName!="">
		and  mi.userName like "%":userName"%"
		</#if>
		<#if appoint?exists && appoint!="">
		and  mi.appoint =:appoint
		</#if>
		<#if mobile?exists && mobile!="">
		and  mi.mobile   like "%":mobile"%"
		</#if>
		<#if status?exists && status!="">
	    and  mi.`status`=:status
		</#if>
		<#if regetype?exists && regetype!="">
		and  mi.regetype=:regetype
		</#if>
		<#if startDate?exists && startDate!="">
		and  mi.createTime>=:startDate
		</#if>
		<#if endDate?exists && endDate!="">
		and  mi.createTime<=:endDate
		</#if>
		<#if cerPersonalStatus?exists && cerPersonalStatus!="">
		and  mi.cerPersonalStatus=:cerPersonalStatus
		</#if>
		<#if cerCompanyStatus?exists && cerCompanyStatus!="">
		and  mi.cerCompanyStatus=:cerCompanyStatus
		</#if>
		<#if serviceType?exists && serviceType!="">
		and  mi.serviceType=:serviceType
		</#if>
		<#if sProvinceId?exists && sProvinceId!="">
		and  ro.provinceId=:sProvinceId
		</#if>
		<#if sCityId?exists && sCityId!="">
		and  ro.cityId=:sCityId
		</#if>
		<#if sAreaId?exists && sAreaId!="">
		and  ro.areaId=:sAreaId
		</#if>
		<#if !memberIdLogisticName?exists>
			order by  mi.id desc
			LIMIT :startRow,:endRow
		</#if>
	    ) w where 1=1
	    <#if memberIdLogisticName?exists && memberIdLogisticName!="">
			AND w.memberIdLogisticName LIKE "%":memberIdLogisticName"%"
		</#if>
		<#if memberIdLogisticName?exists && memberIdLogisticName!="">
			order by  w.id desc
			LIMIT :startRow,:endRow
		</#if>
 	]]>
	</sql>

	<sql id="countTotal"> 
 	<![CDATA[ 
 	select count(1) from (
 		select  
		  CASE 
   			WHEN rla.memberType=2 then (select userName from member_info where id=rla.memberIdLogistic)
  			WHEN  rla.memberType=3 then (SELECT companyName FROM member_cer WHERE rla.memberIdLogistic = memberId AND userType = 2  LIMIT 1 )
			END as memberIdLogisticName
		   from member_info mi
		    LEFT JOIN   rule_onoff ro
            on   mi.id=ro.memberId
           LEFT JOIN  rule_logistic_assign rla on (rla.memberIdShipper=mi.id and rla.isDeleted = 0)
		where 1=1		        
		<#if userName?exists && userName!="">
		and  mi.userName like "%":userName"%"
		</#if>
		<#if appoint?exists && appoint!="">
		and  mi.appoint =:appoint
		</#if>
		<#if mobile?exists && mobile!="">
		and  mi.mobile   like "%":mobile"%"
		</#if>
		<#if status?exists && status!="">
	    and  mi.`status`=:status
		</#if>
		<#if regetype?exists && regetype!="">
		and  mi.regetype=:regetype
		</#if>
		<#if startDate?exists && startDate!="">
		and  mi.createTime>=:startDate
		</#if>
		<#if endDate?exists && endDate!="">
		and  mi.createTime<=:endDate
		</#if>
		<#if cerPersonalStatus?exists && cerPersonalStatus!="">
		and  mi.cerPersonalStatus=:cerPersonalStatus
		</#if>
		<#if cerCompanyStatus?exists && cerCompanyStatus!="">
		and  mi.cerCompanyStatus=:cerCompanyStatus
		</#if>
		<#if serviceType?exists && serviceType!="">
		and  mi.serviceType=:serviceType
		</#if>
		<#if sProvinceId?exists && sProvinceId!="">
		and  ro.provinceId=:sProvinceId
		</#if>
		<#if sCityId?exists && sCityId!="">
		and  ro.cityId=:sCityId
		</#if>
		<#if sAreaId?exists && sAreaId!="">
		and  ro.areaId=:sAreaId
		</#if>
		) w where 1=1 
		<#if memberIdLogisticName?exists && memberIdLogisticName!="">
			AND w.memberIdLogisticName LIKE "%":memberIdLogisticName"%"
		</#if>
		LIMIT 1
 	]]>
	</sql>


	<sql id="queryMemberInfoDetail"> 
 	<![CDATA[ 
 		 select  
		   mi.id 			
		  ,mi.mobile 
		  ,mi.account		
		  ,mi.password 	
		  ,mi.appType     
		  ,mi.serviceType 
		  ,mi.userName    
		  ,mi.iconUrl 	
		  ,mi.latestLoginTime
		  ,mi.regetype 	
		  ,mi.status 		
		  ,mi.remark 		
		  ,mi.createUserId
		  ,mi.createTime  
		  ,mi.updateUserId
		  ,mi.updateTime  
		  ,mi.cerPersonalStatus 
          ,mi.cerCompanyStatus 
          ,IFNULL(mi.appoint,1) appoint
		  ,CASE
				WHEN ro.areaId=0 then NULL
				ELSE ro.areaId
		   END AS areaId
		  ,ro.cityId
		  ,ro.provinceId 
		  ,ro.detail
		  ,rla.memberIdLogistic
		  ,CASE
				WHEN rla.memberType=2 THEN  (SELECT userName FROM member_info WHERE id=rla.memberIdLogistic) 
     			WHEN rla.memberType=3 THEN (SELECT companyName FROM member_cer WHERE memberId=rla.memberIdLogistic  and userType=2 )  
				END as memberIdLogisticName
		  ,mc.realName
		  ,rla.memberType
		   from member_info mi
            LEFT JOIN   rule_onoff ro
            on   mi.id=ro.memberId
            LEFT JOIN (select * from rule_logistic_assign rl where rl.isDeleted = 0)rla 
			ON mi.id = rla.memberIdShipper
			left JOIN ( select * from member_cer mc where mc.userType=1 ) mc
            on  mi.id=mc.memberId
		where mi.id=:memberId
 	]]>
	</sql>

	<sql id="selectCompanyById">
 	<![CDATA[
		select * from member_info
		WHERE 1=1 
		<#assign n = idLists?size />
			<#if n gt 0>
				AND id IN 
				(
				<#list idLists as item>
					<#if item_index != n-1>
							${item} ,
						<#else>
							${item}
					</#if>
				</#list>
				) 
			</#if>
	]]>
	</sql>
	
	
	<sql id="updateAppoint">
	update member_info
	set appoint=:appoint
	where id=:memberId
	</sql>
	
	

	
 
</sqlMap>
