<?xml version="1.0" encoding="UTF-8" ?>
<sqlMap namespace="OrderAgent">
<sql id="insert">
<![CDATA[
	INSERT INTO order_agent(
			orderNo,
			orderBeforeId,
			sourceId,
			logisticMemberId,
			driverMemberId,
			confirmTime,
			orderStatus,
			createUserId,
			createTime
		) VALUES (
			:orderNo,
			:orderBeforeId,
			:sourceId,
			:logisticMemberId,
			:driverMemberId,
			now(),
			:orderStatus,
			:createUserId,
			now()
		)
]]>
</sql>

<sql id="getNstOrderNo">                 
 	<![CDATA[
		SELECT nextval('order_agent')
 	]]>
 	</sql>
 	
<!-- 更新信息订单状态 -->
<sql id="update">
<![CDATA[
	update  order_agent set
	        orderStatus=:orderStatus,
	        <#if logisticTime?exists && logisticTime!="" >
			 	logisticTime=:logisticTime,
			</#if>
			  <#if updateUserId?exists && updateUserId!="" >
			 	updateUserId=:updateUserId,
			</#if>
			 <#if payStatus?exists && payStatus!="" >
			 	payStatus=:payStatus,
			</#if>
	        updateTime=now()
	      where sourceId=:sourceId and orderBeforeId=:orderBeforeId
	        
]]>
</sql>

<sql id="queryOrderAgentById_disable">
<![CDATA[
	SELECT
	*
FROM
	(
		SELECT
			oa.id AS id,
			oa.sourceId AS sourceId,
			s.s_detail AS s_detail,
			s.s_detailed_address AS s_detailed_address,
			s.e_detail AS e_detail,
			s.e_detailed_address AS e_detailed_address,
			s.mileage AS mileage,
			s.sendDate AS sendDate,
			s.carLength AS carLength,
			s.carType AS carType,
			s.goodsType,
			s.sendGoodsType AS sendGoodsType,
			s.goodsName AS goodsName,
			s.totalWeight AS totalWeight,
			s.totalSize AS totalSize,
			s.remark AS remark,
			s.freight AS freight,
			s.nstRule AS nstRule,
			mr.carNumber AS driverCarNumber,
			mr.carType AS driverCarType,
			mr.`load` AS driverCarLoad,
			mr.carLength AS driverCarLength,
			mc.realName AS driverRealName,
			mc.cerStatus AS driverCerStatus,
			mi.mobile AS driverMobile,
			mi.iconUrl AS driverIconUrl,
			mc.companyName AS companyName,
			oa.orderNo AS orderAgentNo,
			oa.orderStatus AS orderAgentStatus,
			oa.confirmTime AS agentConfirmTime,
			oa.logisticTime AS agentLogisticTime,
			op.payMoney as payMoney,
			op.payStatus as payStatus,
			op.payTime as payTime,
			op.platformPayWater as platformPayWater,
			op.payName as payName			
		FROM
			order_agent oa
		INNER JOIN order_before ob ON (
			ob.sourceId = oa.sourceId
		)
		INNER JOIN source_shipper s ON (ob.sourceId = s.id)
		INNER JOIN member_info mi ON (mi.id = ob.driverMemberId)
		INNER JOIN order_paydetail op on (oa.orderNo=op.orderNo and op.orderType=1)
		LEFT JOIN member_cer mc ON mc.memberId = mi.id
		LEFT JOIN member_car mr ON mr.id = ob.carId
		WHERE oa.id =:id
	) t
LEFT JOIN (
	SELECT
		ob.sourceId AS sourceId,
		mc.realName AS shipperRealName,
		mc.cerStatus AS shipperCerStatus,
		mi.mobile AS shipperMobile,
		mi.iconUrl AS shipperIconUrl
	FROM
		order_before ob
	INNER JOIN member_info mi ON (
		mi.id = ob.shipperMemberId
	)
	LEFT JOIN member_cer mc ON mc.memberId = mi.id
) p ON (p.sourceId = t.sourceId)
]]>
</sql>


<sql id="queryByConditionPage_disable">
<![CDATA[
	SELECT
	*
FROM
	(
		(
			SELECT
				p3.id AS id,
				p3.sourceId AS sourceId,
				p3.orderNo AS orderNo,
				p3.driverMemberId AS driverMemberId,
				p3.shipperMemberId AS shipperMemberId,
				p3.logisticMemberId AS logisticMemberId,
				p3.orderStatus AS orderStatus,
				p3.createTime AS createTime,
				p3.assignMemberId AS assignMemberId,
				p3.nstRule AS nstRule,
				p3.s_detail AS s_detail,
				p3.e_detail AS e_detail,
				p3.s_detailed_address AS s_detailed_address,
				p3.e_detailed_address AS e_detailed_address,
				p3.mobile AS driverMobile,/**司机电话 */
				pm2.mobile AS mobile /**货主电话  */
			FROM
				(
					SELECT
						p1.id AS id,
						p1.sourceId AS sourceId,
						p1.orderNo AS orderNo,
						p1.driverMemberId AS driverMemberId,
						p1.shipperMemberId AS shipperMemberId,
						p1.logisticMemberId AS logisticMemberId,
						p1.orderStatus AS orderStatus,
						p1.createTime AS createTime,
						p1.assignMemberId AS assignMemberId,
						p1.nstRule AS nstRule,
						p1.s_detail AS s_detail,
						p1.e_detail AS e_detail,
						p1.s_detailed_address AS s_detailed_address,
						p1.e_detailed_address AS e_detailed_address,
						pm.mobile AS mobile
					FROM
						(
							SELECT
								oa.id AS id,
								oa.sourceId AS sourceId,
								oa.orderNo AS orderNo,
								oa.driverMemberId AS driverMemberId,
								oa.logisticMemberId AS logisticMemberId,
								oa.orderStatus AS orderStatus,
								ob.shipperMemberId AS shipperMemberId,
								oa.createTime AS createTime,
								s.assignMemberId AS assignMemberId,
								s.nstRule AS nstRule,
								s.s_detail AS s_detail,
								s.e_detail AS e_detail,
								s.s_detailed_address AS s_detailed_address,
								s.e_detailed_address AS e_detailed_address
							FROM
								order_agent oa
							INNER JOIN source_shipper s ON (
								oa.sourceId = s.id
								AND s.isDeleted = 0
								AND s.assignMemberId != s.memberId
							)
							LEFT JOIN member_info mi ON (mi.id = s.assignMemberId)
							INNER JOIN order_before ob ON (
								ob.sourceId = oa.sourceId
								AND ob.isDeleted = 0
							)
							WHERE
								1 = 1
							<#if logisticMemberId?exists && logisticMemberId!="" >
								AND oa.logisticMemberId =:logisticMemberId
							</#if>
							<#if orderStatus?exists && orderStatus!="" >
								AND oa.orderStatus =:orderStatus
							</#if>
							<#if nstRule?exists && (nstRule==1 || nstRule=2) >
								AND s.nstRule =:nstRule
							</#if>
							ORDER BY
								oa.createTime DESC
						) p1
					LEFT JOIN member_info pm ON (pm.id = p1.driverMemberId)
				) p3
			LEFT JOIN member_info pm2 ON (pm2.id = p3.shipperMemberId)
		)
		UNION
			(
				SELECT
					p.id,
					p.sourceId AS sourceId,
					p.orderNo AS orderNo,
					p.driverMemberId AS driverMemberId,
					p.logisticMemberId AS logisticMemberId,
					p.shipperMemberId AS shipperMemberId,
					p.orderStatus AS orderStatus,
					p.createTime AS createTime,
					p.assignMemberId AS assignMemberId,
					p.nstRule AS nstRule,
					p.s_detail AS s_detail,
					p.e_detail AS e_detail,
					p.s_detailed_address AS s_detailed_address,
					p.e_detailed_address AS e_detailed_address,
					p.mobile AS mobile,/**物流电话*/
					mp.mobile AS driveMobile /**司机电话*/
				FROM
					(
						SELECT
							oa.id AS id,
							oa.sourceId AS sourceId,
							oa.orderNo AS orderNo,
							oa.driverMemberId AS driverMemberId,
							oa.logisticMemberId AS logisticMemberId,
							ob.shipperMemberId AS shipperMemberId,
							oa.orderStatus AS orderStatus,
							oa.createTime AS createTime,
							s.assignMemberId AS assignMemberId,
							s.nstRule AS nstRule,
							s.s_detail AS s_detail,
							s.e_detail AS e_detail,
							s.s_detailed_address AS s_detailed_address,
							s.e_detailed_address AS e_detailed_address,
							mi.mobile AS mobile /**物流公司电话*/
						FROM
							order_agent oa
						INNER JOIN source_shipper s ON (
							oa.sourceId = s.id
							AND s.isDeleted = 0
							AND s.assignMemberId IS NULL
						)
						LEFT JOIN member_info mi ON (mi.id = s.memberId)
						INNER JOIN order_before ob ON (
							ob.sourceId = oa.sourceId
							AND ob.isDeleted = 0
						)
						WHERE
							1 = 1
							<#if logisticMemberId?exists && logisticMemberId!="" >
								AND oa.logisticMemberId =:logisticMemberId
							</#if>
							<#if orderStatus?exists && orderStatus!="" >
								AND oa.orderStatus =:orderStatus
							</#if>
							<#if nstRule?exists && (nstRule==1 || nstRule=2) >
								AND s.nstRule =:nstRule
							</#if>
						ORDER BY
							oa.createTime DESC
					) p
				LEFT JOIN member_info mp ON (mp.id = p.driverMemberId)
			)
	) AS b
ORDER BY
	b.createTime DESC
LIMIT :startRow ,:endRow
]]>
</sql>

<sql id="getTotal_disable">
<![CDATA[
	SELECT
	count(1)
FROM
	(
		(
			SELECT
				p3.id AS id,
				p3.sourceId AS sourceId,
				p3.orderNo AS orderNo,
				p3.driverMemberId AS driverMemberId,
				p3.shipperMemberId AS shipperMemberId,
				p3.logisticMemberId AS logisticMemberId,
				p3.orderStatus AS orderStatus,
				p3.createTime AS createTime,
				p3.assignMemberId AS assignMemberId,
				p3.nstRule AS nstRule,
				p3.s_detailed_address AS s_detailed_address,
				p3.e_detailed_address AS e_detailed_address,
				p3.mobile AS driverMobile,
				/**司机电话 */
				pm2.mobile AS mobile /**货主电话  */
			FROM
				(
					SELECT
						p1.id AS id,
						p1.sourceId AS sourceId,
						p1.orderNo AS orderNo,
						p1.driverMemberId AS driverMemberId,
						p1.shipperMemberId AS shipperMemberId,
						p1.logisticMemberId AS logisticMemberId,
						p1.orderStatus AS orderStatus,
						p1.createTime AS createTime,
						p1.assignMemberId AS assignMemberId,
						p1.nstRule AS nstRule,
						p1.s_detailed_address AS s_detailed_address,
						p1.e_detailed_address AS e_detailed_address,
						pm.mobile AS mobile
					FROM
						(
							SELECT
								oa.id AS id,
								oa.sourceId AS sourceId,
								oa.orderNo AS orderNo,
								oa.driverMemberId AS driverMemberId,
								oa.logisticMemberId AS logisticMemberId,
								oa.orderStatus AS orderStatus,
								ob.shipperMemberId AS shipperMemberId,
								oa.createTime AS createTime,
								s.assignMemberId AS assignMemberId,
								s.nstRule AS nstRule,
								s.s_detailed_address AS s_detailed_address,
								s.e_detailed_address AS e_detailed_address
							FROM
								order_agent oa
							INNER JOIN source_shipper s ON (
								oa.sourceId = s.id
								AND s.isDeleted = 0
								AND s.assignMemberId != s.memberId
							)
							LEFT JOIN member_info mi ON (mi.id = s.assignMemberId)
							INNER JOIN order_before ob ON (
								ob.sourceId = oa.sourceId
								AND ob.isDeleted = 0
							)
							WHERE
								1 = 1
							<#if logisticMemberId?exists && logisticMemberId!="" >
								AND oa.logisticMemberId =:logisticMemberId
							</#if>
							<#if orderStatus?exists && orderStatus!="" >
								AND oa.orderStatus =:orderStatus
							</#if>
							ORDER BY
								oa.createTime DESC
						) p1
					LEFT JOIN member_info pm ON (pm.id = p1.driverMemberId)
				) p3
			LEFT JOIN member_info pm2 ON (pm2.id = p3.shipperMemberId)
		)
		UNION
			(
				SELECT
					p.id,
					p.sourceId AS sourceId,
					p.orderNo AS orderNo,
					p.driverMemberId AS driverMemberId,
					p.logisticMemberId AS logisticMemberId,
					p.shipperMemberId AS shipperMemberId,
					p.orderStatus AS orderStatus,
					p.createTime AS createTime,
					p.assignMemberId AS assignMemberId,
					p.nstRule AS nstRule,
					p.s_detailed_address AS s_detailed_address,
					p.e_detailed_address AS e_detailed_address,
					p.mobile AS mobile,
					/**物流电话*/
					mp.mobile AS driveMobile /**司机电话*/
				FROM
					(
						SELECT
							oa.id AS id,
							oa.sourceId AS sourceId,
							oa.orderNo AS orderNo,
							oa.driverMemberId AS driverMemberId,
							oa.logisticMemberId AS logisticMemberId,
							ob.shipperMemberId AS shipperMemberId,
							oa.orderStatus AS orderStatus,
							oa.createTime AS createTime,
							s.assignMemberId AS assignMemberId,
							s.nstRule AS nstRule,
							s.s_detailed_address AS s_detailed_address,
							s.e_detailed_address AS e_detailed_address,
							mi.mobile AS mobile /**物流公司电话*/
						FROM
							order_agent oa
						LEFT JOIN source_shipper s ON (
							oa.sourceId = s.id
							AND s.isDeleted = 0
							AND s.assignMemberId IS NULL
						)
						LEFT JOIN member_info mi ON (mi.id = s.memberId)
						INNER JOIN order_before ob ON (
							ob.sourceId = oa.sourceId
							AND ob.isDeleted = 0
						)
						WHERE
							1 = 1
							<#if logisticMemberId?exists && logisticMemberId!="" >
								AND oa.logisticMemberId =:logisticMemberId
							</#if>
							<#if orderStatus?exists && orderStatus!="" >
								AND oa.orderStatus =:orderStatus
							</#if>
						ORDER BY
							oa.createTime DESC
					) p
				LEFT JOIN member_info mp ON (mp.id = p.driverMemberId)
			)
	) AS b
]]>
</sql>



<sql id="queryByConditionPage">
<![CDATA[
	SELECT
		A.id AS id,
		A.sourceId AS sourceId,
		D.orderNo AS orderAgentNo,
		A.driverMemberId AS driverMemberId,
		A.shipperMemberId AS shipperMemberId,
		B.assignMemberId AS logisticMemberId,
		D.orderStatus AS orderStatus,
		CASE orderStatus
        	WHEN 1 THEN '待确认'
       		WHEN 2 THEN '已确认'
			ELSE '已关闭'
		END as orderStatusStr,
		A.createTime AS createTime,
		B.assignMemberId AS assignMemberId,
		B.nstRule AS nstRule,
		B.s_detail AS s_detail,
		B.e_detail AS e_detail,
		B.s_detailed_address AS s_detailed_address,
		B.e_detailed_address AS e_detailed_address,
		A.driverMobile AS driverMobile,/**司机电话 */
		A.shipperMobile AS mobile, /**货主电话  */
		now() as currentDate
	FROM
		order_before A
	LEFT JOIN source_shipper B ON A.sourceId = B.id 
	INNER JOIN order_agent D ON A.sourceId = D.sourceId AND D.orderBeforeId=A.id 
	WHERE
		1 = 1
	AND (
		B.assignMemberId =:logisticMemberId
		OR B.memberId =:logisticMemberId
	)
	<#if orderStatus?exists && orderStatus!="" >
		<#if  orderStatus==2 >
			AND A.sourceStatus in (2,3)
		<#elseif orderStatus==4>
			AND A.sourceStatus in (4,5,6)
		<#else>
			AND A.sourceStatus=:orderStatus
		</#if>
	</#if>
	
	<#if nstRule?exists && nstRule==1 >
		AND B.nstRule in(1,4)
	<#elseif nstRule?exists && nstRule==2>
		AND B.nstRule=2
	</#if>
	ORDER BY
		A.createTime DESC
	LIMIT :startRow ,:endRow							
]]>
</sql>

<sql id="getTotal">
<![CDATA[
	SELECT
		count(A.id)
	FROM
		order_before A
	LEFT JOIN source_shipper B ON A.sourceId = B.id 
	LEFT JOIN order_info C ON A.sourceId = C.sourceId 	 AND 	C.orderBeforeId=A.id
	LEFT JOIN order_agent D ON A.sourceId = D.sourceId AND D.orderBeforeId=A.id 
	WHERE
		1 = 1
	AND (
		B.assignMemberId =:logisticMemberId
		OR B.memberId =:logisticMemberId
	)
	<#if orderStatus?exists && orderStatus!="" >
		<#if  orderStatus==2 >
			AND A.sourceStatus in (2,3)
		<#else>
			AND A.sourceStatus=:orderStatus
		</#if>
	</#if>
	<#if nstRule?exists && nstRule==1 >
		AND B.nstRule in(1,4)
	<#elseif nstRule?exists && nstRule==2>
		AND B.nstRule=2
	</#if>
]]>
</sql>


<sql id="queryOrderAgentById">
<![CDATA[
	SELECT
		A.id AS id,
		A.sourceId AS sourceId,
		B.s_detail AS s_detail,
		B.s_detailed_address AS s_detailed_address,
		B.e_detail AS e_detail,
		B.e_detailed_address AS e_detailed_address,
		B.mileage AS mileage,
		B.sendDate AS sendDate,
		B.carLength AS carLength,
		B.carType AS carType,
		B.goodsType as goodsTypeId,
		B.sendGoodsType AS sendGoodsType,
		B.goodsName AS goodsName,
		B.totalWeight AS totalWeight,
		B.totalSize AS totalSize,
		B.remark AS remark,
		B.freight AS freight,
		B.nstRule AS nstRule,
		B.sourceType as sourceType,
		F.carNumber AS driverCarNumber,
		F.carType AS driverCarType,
		F.`load` AS driverCarLoad,
		F.carLength AS driverCarLength,
		G.userName  AS driverRealName,
		E.cerStatus AS driverCerStatus,
		A.driverMobile AS driverMobile,
		G.iconUrl AS driverIconUrl,
		E.companyName AS companyName,
		C.orderNo AS orderNo,
		H.orderStatus AS orderAgentStatus,
		A.sourceStatus AS orderStatus,
		H.confirmTime AS agentConfirmTime,
		H.logisticTime AS agentLogisticTime,
		H.orderNo AS orderAgentNo,
		D.payMoney AS payMoney,
		D.payStatus AS payStatus,
		D.payTime AS payTime,
		D.platformPayWater AS platformPayWater,
		D.payName AS payName,
		(select userName from member_info I where I.id= B.memberId )as shipperName,
		B.shipperMobile,
		(select J.cerStatus from member_cer J where J.memberId = A.shipperMemberId limit 1) as shipperCerStatus,
		(select I.iconUrl from member_info I where I.id=A.shipperMemberId limit 1) as shipperIconUrl, now() as currentDate
	FROM
		order_before A
	LEFT JOIN source_shipper B ON A.sourceId = B.id
	LEFT JOIN order_info C ON A.sourceId = C.sourceId
	LEFT JOIN member_cer E ON (A.driverMemberId = E.memberId AND E.userType=1)
	LEFT JOIN member_car F ON A.carId = F.id
	LEFT JOIN member_info G ON A.driverMemberId = G.id
	LEFT JOIN order_agent H ON A.sourceId = H.sourceId
	LEFT JOIN order_paydetail D ON (H.orderNo = D.orderNo AND D.orderType = 1)
	WHERE
		1 = 1
	AND A.id =:id AND  H.orderBeforeId=:id
	limit 1
]]>
</sql>
	<sql id="getOrderBeforeIdByOrderNo">
		<![CDATA[
			SELECT orderBeforeId,logisticMemberId FROM order_agent 
			WHERE orderNo =:orderNo
		]]>
	</sql>  
</sqlMap>
