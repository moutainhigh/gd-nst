package cn.gdeng.nst.server.order.impl;

import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang3.StringUtils;

import com.alibaba.dubbo.config.annotation.Service;

import cn.gdeng.nst.api.dto.order.OrderAgentDTO;
import cn.gdeng.nst.api.server.order.OrderAgentService;
import cn.gdeng.nst.api.vo.order.OrderAgentPageVo;
import cn.gdeng.nst.api.vo.order.OrderAgentVo;
import cn.gdeng.nst.dao.BaseDao;
import cn.gdeng.nst.enums.CarTypeEnum;
import cn.gdeng.nst.enums.GoodsTypeEnum;
import cn.gdeng.nst.enums.MsgCons;
import cn.gdeng.nst.enums.NstRuleEnum2;
import cn.gdeng.nst.enums.OrderAgentStatusEnum;
import cn.gdeng.nst.enums.PayStatusEnum;
import cn.gdeng.nst.enums.SendGoodsTypeEnum;
import cn.gdeng.nst.enums.SourceStatusClientEnum;
import cn.gdeng.nst.util.web.api.ApiPage;
import cn.gdeng.nst.util.web.api.ApiResult;
import cn.gdeng.nst.util.web.api.BizException;

@Service
public class OrderAgentServiceImpl implements OrderAgentService {
	@Resource
	private BaseDao<?> baseDao;
	@Override
	public ApiResult<ApiPage> queryOrderAgentPage(ApiPage page) throws Exception {
		ApiResult<ApiPage> apiResult=new ApiResult<>();
		int total=baseDao.queryForObject("OrderAgent.getTotal",page.getParaMap(), Integer.class);
		if(total==0){
			return apiResult;
		}
		List<OrderAgentPageVo> pageVoList=baseDao.queryForList("OrderAgent.queryByConditionPage", page.getParaMap(),OrderAgentPageVo.class);
		//将结果封装到分页对象
		page.setRecordList(pageVoList).setRecordCount(total);
		//将分页封装到返回结果
		apiResult.setResult(page);
		return apiResult;
	}
	@Override
	public ApiResult<OrderAgentVo> queryOrderAgent(OrderAgentDTO dto) throws BizException {
		ApiResult<OrderAgentVo> apiResult=new ApiResult<>();
		OrderAgentVo agentVo=baseDao.queryForObject("OrderAgent.queryOrderAgentById", dto,OrderAgentVo.class);
		if(agentVo==null){
			throw new BizException(MsgCons.C_23004, MsgCons.M_23004);
		}
		//支付状态
		if(StringUtils.isNotBlank(agentVo.getPayStatus())){
			agentVo.setPayStatusStr(PayStatusEnum.getNameByCode(Short.valueOf(agentVo.getPayStatus())));
		}
		if(StringUtils.isBlank(agentVo.getPayStatus())){
			agentVo.setPayStatusStr(PayStatusEnum.NOT_PAY.getName());
		}
		if(null != agentVo.getGoodsTypeId()){
			agentVo.setGoodsTypeStr(GoodsTypeEnum.getNameByCode(agentVo.getGoodsTypeId().byteValue()));
		}
		if(null != agentVo.getSendGoodsType()){
			agentVo.setSendGoodsTypeStr(SendGoodsTypeEnum.getNameByCode(agentVo.getSendGoodsType().byteValue()));
		}
		if(null != agentVo.getCarType()){
			agentVo.setCarTypeStr(CarTypeEnum.getNameByCode(agentVo.getCarType().byteValue()));
		}
		if(null != agentVo.getDriverCarType()){
			agentVo.setDriverCarTypeStr(CarTypeEnum.getNameByCode(agentVo.getDriverCarType().byteValue()));
		}
		if(null != agentVo.getNstRule()){
			agentVo.setNstRuleStr(NstRuleEnum2.getNameByCode(agentVo.getNstRule().byteValue()));
		}
		if(StringUtils.isNotBlank(agentVo.getNstRuleStr())&&agentVo.getNstRuleStr().equals(NstRuleEnum2.SELFLOGST.getName())){
			agentVo.setMsgSource(MsgCons.MSG_SOURCE_DRIVER);
		}
		if(StringUtils.isNotBlank(agentVo.getNstRuleStr())&&agentVo.getNstRuleStr().equals(NstRuleEnum2.DISTRIBUTED.getName())){
			agentVo.setMsgSource(MsgCons.MSG_SOURCE_PLATFORM);
		}
		if(null != agentVo.getOrderAgentStatus()){
			agentVo.setOrderAgentStatusStr(OrderAgentStatusEnum.getNameByCode(agentVo.getOrderAgentStatus().byteValue()));
		}
		if(null != agentVo.getOrderStatus()){
			agentVo.setOrderStatusStr(SourceStatusClientEnum.getNameByCode(agentVo.getOrderStatus().byteValue()));
		}
		apiResult.setResult(agentVo);
		return apiResult;
	}

}
