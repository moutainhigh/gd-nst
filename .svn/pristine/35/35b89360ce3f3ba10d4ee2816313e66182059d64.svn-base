package cn.gdeng.nst.web.controller.member;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.gdeng.nst.api.dto.member.RuleOnoffDTO;
import cn.gdeng.nst.api.server.member.RuleOnoffApiService;
import cn.gdeng.nst.api.vo.member.RuleOnoffDetailVo;
import cn.gdeng.nst.util.web.api.ApiResult;
import cn.gdeng.nst.web.controller.base.BaseController;

import com.alibaba.dubbo.config.annotation.Reference;
@Controller
@RequestMapping("ruleOnoffApi")
public class RuleOnoffApiController  extends BaseController {

	@Reference
	private RuleOnoffApiService ruleOnoffApiApiService;
	
	@ResponseBody
	@RequestMapping("updateRuleOnoffById")
	public Object updateRuleOnoffById(HttpServletRequest request) throws Exception {
		RuleOnoffDTO ruleOnoffDTO = getDecodeDto(request,RuleOnoffDTO.class);        
        ApiResult<Integer> result = ruleOnoffApiApiService.updateRuleOnoffById(ruleOnoffDTO);
        return result; 
	 }
	
	@ResponseBody
	@RequestMapping("queryRuleOnoffById")
	public Object queryRuleOnoffById(HttpServletRequest request) throws Exception {
		RuleOnoffDTO ruleOnoffDTO = getDecodeDto(request,RuleOnoffDTO.class);        
        ApiResult<RuleOnoffDetailVo> result = ruleOnoffApiApiService.queryRuleOnoffById(ruleOnoffDTO);
        return result; 
	 }
	
	@ResponseBody
	@RequestMapping("updateRuleOnoffAddressById")
	public Object updateRuleOnoffAddressById(HttpServletRequest request) throws Exception {
		RuleOnoffDTO ruleOnoffDTO = getDecodeDto(request,RuleOnoffDTO.class);        
        ApiResult<Integer> result = ruleOnoffApiApiService.updateRuleOnoffAddressById(ruleOnoffDTO);
        return result; 
	 }
	
	
}
