<?xml version="1.0" encoding="UTF-8" ?>
<sqlMap namespace="Membercer">  
	 <sql id="countByConditions">
	    <![CDATA[
	              SELECT COUNT(1) FROM member_info mi INNER JOIN member_cer mc ON mi.id=mc.`memberId` WHERE 1=1 
	              <#if companyName?exists && companyName!="">
					 AND mc.companyName like "%":companyName"%"
				  </#if>
	              <#if realName?exists && realName!="">
					 AND mc.realName like "%":realName"%"
				  </#if>
				  <#if mobile?exists && mobile!="">
					 AND mi.mobile like "%":mobile"%"
				  </#if>
				  <#if cerStatus?exists && cerStatus!="">
					 AND mc.cerStatus=:cerStatus
				  </#if>
				  <#if certificFrom?exists && certificFrom!="">
					 AND mc.certificFrom=:certificFrom
				  </#if>
				 <#if applyForBeginTime?exists && applyForBeginTime != "">
					 AND DATE_FORMAT(IFNULL(mc.updateTime,mc.`createTime`),'%Y-%m-%d') >= :applyForBeginTime
				  </#if>
				  <#if applyForEndTime?exists && applyForEndTime!="">
					 AND DATE_FORMAT(IFNULL(mc.updateTime,mc.`createTime`),'%Y-%m-%d') <= :applyForEndTime
				  </#if>
				  <#if auditBeginTime?exists && auditBeginTime != "">
					 AND DATE_FORMAT(mc.`auditTime`,'%Y-%m-%d') >=:auditBeginTime
				  </#if>
				  <#if auditEndTime?exists &&  auditEndTime!="">
					 AND DATE_FORMAT(mc.`auditTime`,'%Y-%m-%d') <= :auditEndTime
				  </#if>
				  <#if userType?exists && userType!="">
				     AND mc.userType=:userType
				  </#if>
		]]>
	 </sql>
  
     <sql id="findByConditions">
         <![CDATA[
				SELECT mc.`id`,mc.`memberId`, mc.`realName`, mc.`companyName`,mi.account, mi.`mobile`,mc.certificFrom, mc.`cerStatus`,
				IFNULL(mc.updateTime,mc.`createTime`) AS applyForTime, mc.`auditor`, mc.`auditTime` 
				FROM member_info mi INNER JOIN member_cer mc ON mi.id=mc.`memberId` WHERE 1=1 
	              <#if companyName?exists && companyName!="">
					 AND mc.companyName like "%":companyName"%"
				  </#if>
	              <#if realName?exists && realName!="">
					 AND mc.realName like "%":realName"%"
				  </#if>
				  <#if mobile?exists && mobile!="">
					 AND mi.mobile like "%":mobile"%"
				  </#if>
				  <#if cerStatus?exists && cerStatus!="">
					 AND mc.cerStatus=:cerStatus
				  </#if>
				  <#if certificFrom?exists && certificFrom!="">
					 AND mc.certificFrom=:certificFrom
				  </#if>
				  <#if applyForBeginTime?exists && applyForBeginTime != "">
					 AND DATE_FORMAT(IFNULL(mc.updateTime,mc.`createTime`),'%Y-%m-%d') >= :applyForBeginTime
				  </#if>
				  <#if applyForEndTime?exists && applyForEndTime!="">
					 AND DATE_FORMAT(IFNULL(mc.updateTime,mc.`createTime`),'%Y-%m-%d') <= :applyForEndTime
				  </#if>
				  <#if auditBeginTime?exists && auditBeginTime != "">
					 AND DATE_FORMAT(mc.`auditTime`,'%Y-%m-%d') >=:auditBeginTime
				  </#if>
				  <#if auditEndTime?exists &&  auditEndTime!="">
					 AND DATE_FORMAT(mc.`auditTime`,'%Y-%m-%d') <= :auditEndTime
				  </#if>
				  <#if userType?exists && userType!="">
				     AND mc.userType=:userType
				  </#if>
				  ORDER BY IFNULL(mc.updateTime,mc.`createTime`) DESC				  		
                  <#if startRow?exists && startRow!="" && endRow?exists && endRow!="">
				      LIMIT :startRow,:endRow
				  </#if>		 		 
         ]]>
     </sql>
     
     <sql id="findAll">
         <![CDATA[
              SELECT
                  mi.account,
                  <#if userType?exists && userType!="" && userType==1>
			          mc.`realName` as name,
			      </#if>	
				  <#if userType?exists && userType!="" && userType==2>
			          mc.`companyName` as name,
			      </#if>				  
				  mi.`mobile`,
				  mc.certificFrom,
				  IFNULL(mc.updateTime,mc.`createTime`) as applyForTime,
				  mc.`cerStatus`,	
				  mc.`certificFrom`,				 
				  mc.auditor,
                  mc.auditTime
              FROM member_info mi INNER JOIN member_cer mc ON mi.id=mc.`memberId` WHERE 1=1
              <#if companyName?exists && companyName!="">
				 AND mc.companyName like "%":companyName"%"
			  </#if>
              <#if realName?exists && realName!="">
				 AND mc.realName like "%":realName"%"
			  </#if>
			  <#if mobile?exists && mobile!="">
				 AND mi.mobile like "%":mobile"%"
			  </#if>
			  <#if cerStatus?exists && cerStatus!="">
				 AND mc.cerStatus=:cerStatus
			  </#if>
			  <#if certificFrom?exists && certificFrom!="">
					 AND mc.certificFrom=:certificFrom
		      </#if>
			  <#if applyForBeginTime?exists && applyForBeginTime != "">
				 AND DATE_FORMAT(IFNULL(mc.updateTime,mc.`createTime`),'%Y-%m-%d') >= :applyForBeginTime
			  </#if>
			  <#if applyForEndTime?exists && applyForEndTime!="">
				 AND DATE_FORMAT(IFNULL(mc.updateTime,mc.`createTime`),'%Y-%m-%d') <= :applyForEndTime
			  </#if>
			  <#if auditBeginTime?exists && auditBeginTime != "">
				 AND DATE_FORMAT(mc.`auditTime`,'%Y-%m-%d') >=:auditBeginTime
			  </#if>
			  <#if auditEndTime?exists &&  auditEndTime!="">
				 AND DATE_FORMAT(mc.`auditTime`,'%Y-%m-%d') <= :auditEndTime
			  </#if>
			  <#if userType?exists && userType!="">
			     AND mc.userType=:userType
			  </#if>
			  ORDER BY IFNULL(mc.updateTime,mc.`createTime`) DESC 
			  <#if startRow?exists && startRow!="" && endRow?exists && endRow!="">
				      LIMIT :startRow,:endRow
			  </#if>
         ]]>
     </sql>
     
     <sql id="findOne">
         <![CDATA[
           SELECT
				mi.account,
				mi.`mobile`,
				mi.`iconUrl`,
				mc.*,
				car.id as carId,
			  	car.carNumber,
				car.carHeadUrl,
				car.carRearUrl,
				car.vehicleUrl
			FROM
				member_cer mc
			LEFT JOIN member_info mi ON mi.id = mc.`memberId`
			LEFT JOIN member_car car ON mc.`memberCarId` = car.`id`
			WHERE
				mc.id = :id
         ]]>
     </sql>
     
     <sql id="updateByConditions">
         <![CDATA[
           	UPDATE  
           		member_cer mc INNER JOIN member_info mi ON mc.`memberId`=mi.`id`
            	SET
            		mc.cerStatus=:cerStatus,
            		mc.passTime=NOW(),
            		mc.auditor=:auditor,
            		mc.auditTime=:auditTime,
            		mc.auditOpinion=:auditOpinion			
		  	<#if userType?exists && userType!="" && userType==1 && typeStatus?exists && typeStatus!="">
		     	,mi.`cerPersonalStatus`=:typeStatus
		  	</#if>	
		  	<#if userType?exists && userType!="" && userType==2 && typeStatus?exists && typeStatus!="">
		     	,mi.`cerCompanyStatus`=:typeStatus
		  	</#if>	
			WHERE mc.id=:cerId
         ]]>
     </sql>
     
     <sql id="countAuthedCar">
       <![CDATA[
        SELECT
			count(1)
		FROM
			member_cer mc
		INNER JOIN 
			member_car car ON mc.memberCarId = car.id
		WHERE
			mc.cerStatus = 1 AND mc.id != :mcId AND car.carNumber = :memberCarNumber
       ]]>
     </sql>
</sqlMap>